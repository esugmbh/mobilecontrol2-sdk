buildscript {
    repositories {
//        maven {
//            url 'https://repo1.maven.org/maven2/'
//        }
        mavenCentral()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.2.0'
    }
}

plugins {
    id 'org.jreleaser' version '1.14.0'
    id 'com.android.library'
    id 'maven-publish'
}

// Maven settings
group = 'eu.esu.mobilecontrol2'
version = '1.1.7'

android {
    compileSdk 34
    namespace 'eu.esu.mobilecontrol2.sdk'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 34
        versionCode 3
        versionName = version
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
task sourceJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

//task javadoc(type: Javadoc) {
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//    destinationDir = file("$buildDir/docs/javadoc")
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    archiveClassifier.set('javadoc')
//    from javadoc.destinationDir
//}


task javadocJar(type: Jar) {
    archiveClassifier.set('javadoc')

    doFirst {
        // Define the output directory for Javadoc
        def javadocDir = file("$buildDir/docs/javadoc")
        javadocDir.mkdirs() // Ensure the directory exists

        // Collect source directories as a path string
        def sourcePaths = android.sourceSets.main.java.srcDirs.collect { it.path }.join(File.pathSeparator)

        // Use Ant to generate the Javadoc
        ant.javadoc(destdir: javadocDir, sourcepath: sourcePaths, classpath: android.bootClasspath.join(File.pathSeparator)) {
            // Optionally exclude files
            // exclude(name: "**/R.java")
            // exclude(name: "**/BuildConfig.java")
        }
    }

    // Package the generated Javadoc files into the JAR
    from("$buildDir/docs/javadoc")
}
// Task to generate javadoc jar (requires Dokka or other documentation tool for Android)
//task javadocJar(type: Jar) {
//    archiveClassifier.set('javadoc')
//    from 'src/main/java'  // Replace with actual path if using a documentation tool
//}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'io.github.esugmbh' // Replace with your actual groupId
            artifactId = project.name
            version = version

//            from components.java
//            afterEvaluate {
//                from components.release
//            }
            afterEvaluate {
                artifact("$buildDir/outputs/aar/${project.name}-release.aar")
            }

            artifact sourceJar
//            artifact javadocJar

            pom {
                name = 'Mobile Control II SDK'
                description = 'Mobile Control II SDK'
                url = 'https://github.com/esugmbh/mobilecontrol2-sdk'
                licenses {
                    license {
                        name = 'MIT license'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'Test'
                        name = 'ESU Android dev'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/esugmbh/mobilecontrol2-sdk.git'
                    developerConnection = 'scm:git:ssh://github.com/esugmbh/mobilecontrol2-sdk.git'
                    url = 'http://github.com/esugmbh/mobilecontrol2-sdk'
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

jreleaser {
    signing {
        active = 'ALWAYS'
        armored = true
    }
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('target/staging-deploy')
                }
            }
        }
    }
}

jreleaser {
    signing {
        active = 'ALWAYS'
        armored = true
    }
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('target/staging-deploy')
                }
            }
        }
    }
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
}